# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно
# не запрашивать у пользователя, а указать явно, в программе.
print('1.')
my_list = ['Hello', 3, 1.623, None, [44, 'Bye'], True, {'Name': 'Kate'}, (1, 2, 3)]
for d in my_list:
    print(type(d))

# 2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
print('2.')
info_list = input('Введите данные через пробел: ').split()
n = 1
while n < len(info_list):
    info_list[n], info_list[n - 1] = info_list[n - 1], info_list[n]
    n += 2
print(info_list)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить
# к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
print('3.')
months = {
    1: 'Зима',
    2: 'Зима',
    3: 'Весна',
    4: 'Весна',
    5: 'Весна',
    6: 'Лето',
    7: 'Лето',
    8: 'Лето',
    9: 'Осень',
    10: 'Осень',
    11: 'Осень',
    12: 'Зима'
}
ins_month = int(input('Введите число месяца: '))
print(months.get(ins_month))
winter = [1, 2, 12]
spring = [3, 4, 5]
summer = [6, 7, 8]
autumn = [9, 10, 11]
if ins_month in winter:
    print('Зима')
elif ins_month in spring:
    print('Весна')
elif ins_month in summer:
    print('Лето')
elif ins_month in autumn:
    print('Осень')
else:
    print('Такого месяца нет')

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.
print('4.')
input_str = input('Введите строку: ')
list_str = input_str.split()
for i in range(len(list_str)):
    print(i + 1, list_str[i][:10])

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий
# набор натуральных чисел. У пользователя необходимо запрашивать новый элемент
# рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде,
# например, my_list = [7, 5, 3, 3, 2].
print('5.')
my_list = [7, 5, 3, 3, 2]
try:
    element = int(input('Введите новый элемент рейтинга: '))
    if element in my_list:
        my_list.reverse()
        my_list.insert(my_list.index(element), element)
        my_list.reverse()
    elif element < my_list[len(my_list) - 1]:
        my_list.append(element)
    else:
        for elem in my_list:
            if element < elem:
                continue
            else:
                my_list.insert(my_list.index(elem), element)
                break
    print(my_list)
except ValueError:
    print('Неверные данные. При вводе должно быть число.')

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой
# список кортежей. Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором
# каждый ключ — характеристика товара, например название, а значение — список
# значений-характеристик, например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }
print('6.')
goods = []
new_goods = '+'
while True:
    if new_goods == '+':
        number = int(input('Введите номер товара: '))
        name = input('Введите название товара: ')
        cost = int(input('Введите цену товара: '))
        quantity = int(input('Введите количество товара: '))
        unit = input('Введите единицы измерения товара: ')
        print('')
        goods.append((number, {'Название': name, 'Цена': cost, 'Количество': quantity, 'Единицы': unit}))
        new_goods = input('Добавить новый товар?(+/-) ')
        print('')
    elif new_goods == '-':
        break
    else:
        new_goods = input('Добавить новый товар?(+/-) ')
        print('')
print(goods)
result = {}
for i in range(len(goods)):
    for key, value in goods[i][1].items():
        if key not in result:
            result[key] = []
        if value not in result.get(key):
            result.get(key).append(value)
print(result)
