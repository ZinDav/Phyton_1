# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
print('1.')


def dividing(a, b):
    return a / b


try:
    f_div = int(input('Введите делимое: '))
    s_div = int(input('Введите делитель: '))
    print(dividing(f_div, s_div))
except ValueError:
    print('Введите числа')
except ZeroDivisionError:
    print('Нельзя делить на ноль!')

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры
# как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
print('2.')
user_name = input('Ваше имя: ')
user_surname = input('Ваша фамилия: ')
user_year = input('Ваш год рождения: ')
user_city = input('Город проживания: ')
user_email = input('Ваш email: ')
user_phone = input('Номер телефона: ')


def user(name, surname, year, city, email, phone):
    print(f'{name} {surname} {year} года рождения, проживающий/ая в городе {city}, {email} {phone}')


user(name=user_name, surname=user_surname, year=user_year, city=user_city, email=user_email, phone=user_phone)

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму
# наибольших двух аргументов.
print('3.')


def my_func(a, b, c):
    list_num = [a, b, c]
    list_num.remove(min(a, b, c))
    return list_num[0] + list_num[1]


f_sum = int(input('Введите первое число: '))
s_sum = int(input('Введите второе число: '))
t_sum = int(input('Введите третье число: '))
print(my_func(f_sum, s_sum, t_sum))

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
print('4.')


def multi(x, y):
    if x > 0 > y:
        return x**y
    else:
        print('Введите подходящие числа')


def multiply(x, y):
    if x > 0 > y:
        copy_x = x
        for k in range(1, abs(y)):
            x *= copy_x
        return 1 / x
    else:
        print('Введите подходящие числа')


f_multi = float(input('Введите действительное положительное число: '))
s_multi = int(input('Введите целое отрицательное число: '))
print(multi(f_multi, s_multi))
print(multiply(f_multi, s_multi))

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter
# должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел
# к полученной ранее сумме и после этого завершить программу.
print('5.')


def sums(old_list, new_list):
    for p in range(len(new_list)):
        if new_list[p].isdigit():
            old_list.append(int(new_list[p]))
        elif new_list[p].replace('.', '', 1).isdigit() and '.' in new_list[p]:
            old_list.append(float(new_list[p]))
        else:
            continue
    print(sum(old_list))


list_1 = []
list_ins = []
while True:
    list_ins = input('Введите числа через пробел (для завершения введите @): ').split()
    if '@' not in list_ins:
        sums(list_1, list_ins)
    else:
        list_ins = list_ins[0:list_ins.index('@')]
        sums(list_1, list_ins)
        break

# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки,
# но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
print('6.')


def int_func(ref_str):
    return ref_str.title()


print(int_func(input('Введите слово: ')))

result = []
new_str = input('Введите предложение: ').split()
for i in range(len(new_str)):
    result.append(int_func(new_str[i]))
print(*result)
